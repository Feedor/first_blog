Переходим в файл mysite/urls.py (папка mysite содержит файл settings.py)
В этом файле Django смотрит, где искать файлы для отображения на странице - 127.0.0.1:8000/, например)
Там есть информация про администратора - поэтому мы и могли сразу же перейти на 127.0.0.1:8000/admin и увидели панель администрирования
После строчки:
	path('admin/', admin.site.urls),
Вставляем:
	path('', include('<название веб-приложения>.urls')),

Теперь django будет искать в папке <название веб-приложения> файл urls.py 
Зачем? Чтобы найти, что отображать на странице вместо приветственного сообщения от django
Идем в папку <название веб-приложения> и ищем файл urls.py, если его нет - создаем (можно скопировать из папки mysite)
Админа в этом файле, разумеется, быть не должно - он только в папке с основными настройками
Из библиотеки django.urls подключаем path (если оно уже есть - не нужно):
	from django.urls import path
В этом urls.py мы добавляем на нашу страницу в браузере новое представление, 
то есть то, что будет на ней отображаться вместо приветствия от django
Представление / отображаться - есть логика, верно? К слову, по английски представления - views
Подключим файл views.py:
	from . import views
Добавляем новый urlpattern (pattern - шаблон, то есть мы сейчас укажем django конкретный файл, в который надо смотреть)
	urlpatterns = [
    		path('', views.<имя html-файла>, name='<имя html-файла>'),
	]
Новые шаблоны/html-страницы дописываем после запятой по тому же образцу.
Теперь в поисках того, что отобразить на нашей странице в браузере django пойдет в файл views.py
Открываем этот файл.
В нем у нас должен быть подключен render:
	from django.shortcuts import render
Создаем функцию <имя html-файла>, которая возвращает render от запроса к нашему html-файлу, то есть:
	def <имя html-файла>(request):
    		return render(request, 'blog/<имя html-файла>.html', {})
Мы наконец добрались до указания нужного html-файла!
Осталось этот файл создать, если его нет.
В папке <название веб-приложения> (мы в ней сейчас находимся) создаем папку templates
В папке templates создаем папку под именем <название веб-приложения>
В этой папке создаем html-файл <имя html-файла>.html (расширение важно!)
Мы все настроили, и теперь, открыв в браузере 127.0.01:8000 увидем не заставку от django, а пустую белую страницу
Это потому, что в нашем html-файле ничего нет, исправим это.
